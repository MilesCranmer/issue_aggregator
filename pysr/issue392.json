{
  "data": {
    "repository": {
      "issue": {
        "number": 392,
        "title": "[BUG]: TypeError: _check_feature_names_in() got an unexpected keyword argument 'generate_names'",
        "body": "### What happened?\r\n\r\nI use anaconda to manage my Python pkgs. But `conda install -c conda-forge pysr` failed to install `pysr` because it spent lots of time on solving environment. Thus I installed Julia and `pysr` with pip in conda prompt. \r\nHowever, when running demos in Quickstart section of [README.md](https://github.com/MilesCranmer/PySR#readme), an error occurred. \r\n`TypeError: _check_feature_names_in() got an unexpected keyword argument 'generate_names'`\r\n\r\n### Version\r\n\r\n0.15.0\r\n\r\n### Operating System\r\n\r\nWindows\r\n\r\n### Package Manager\r\n\r\npip\r\n\r\n### Interface\r\n\r\nIPython Terminal\r\n\r\n### Relevant log output\r\n\r\n```shell\r\nraceback (most recent call last):\r\n  File \"E:/PCprofessional/PyCharm 2022.2.3/plugins/python/helpers/pydev/pydevd.py\", line 1496, in _exec\r\n    pydev_imports.execfile(file, globals, locals)  # execute the script\r\n  File \"E:\\PCprofessional\\PyCharm 2022.2.3\\plugins\\python\\helpers\\pydev\\_pydev_imps\\_pydev_execfile.py\", line 18, in execfile\r\n    exec(compile(contents+\"\\n\", file, 'exec'), glob, loc)\r\n  File \"F:\\MasterDegreeCode\\EnDeCoder\\symboltest.py\", line 17, in <module>\r\n    model.fit(X, y)\r\n  File \"E:\\CondaFolder\\envs\\Symbol\\lib\\site-packages\\pysr\\sr.py\", line 1910, in fit\r\n    X, y, Xresampled, weights, variable_names, X_units, y_units\r\n  File \"E:\\CondaFolder\\envs\\Symbol\\lib\\site-packages\\pysr\\sr.py\", line 1442, in _validate_and_set_fit_params\r\n    self, variable_names, generate_names=False\r\nTypeError: _check_feature_names_in() got an unexpected keyword argument 'generate_names'\r\n```\r\n\r\n\r\n### Extra Info\r\n\r\nHere is the script.\r\n```\r\nimport numpy as np\r\nimport pysr\r\nfrom pysr import PySRRegressor\r\n#%%\r\nX = 2 * np.random.randn(100, 5)\r\ny = 2.5382 * np.cos(X[:, 3]) + X[:, 0] ** 2 - 0.5\r\n\r\nfrom pysr import PySRRegressor\r\n\r\nmodel = PySRRegressor(\r\n    niterations=40,  # < Increase me for better results\r\n    binary_operators=[\"+\", \"*\"],\r\n    unary_operators=[\r\n        \"cos\",\r\n        \"exp\",\r\n        \"sin\",\r\n        \"inv(x) = 1/x\",\r\n        # ^ Custom operator (julia syntax)\r\n    ],\r\n    extra_sympy_mappings={\"inv\": lambda x: 1 / x},\r\n    # ^ Define operator for SymPy as well\r\n    loss=\"loss(prediction, target) = (prediction - target)^2\",\r\n    # ^ Custom loss function (julia syntax)\r\n)\r\n\r\nmodel.fit(X, y)\r\n\r\nprint(model)\r\n```\r\n***\r\nI created a new anaconda env and installed pysr in it. Both the envs throw the same error. I have run `pysr.install()` in these two envs before running the script above.\r\nI used `Debug` in Pycharm and found that function `_check_feature_names_in`  defined in `\\Lib\\site-packages\\sklearn\\utils\\validation.py` only has `input_features=None`. \r\nWhen `generate_names=False` in `_check_feature_names_in`(line 1441 in \\Lib\\site-packages\\pysr\\sr.py) is commented, the script runs normally. And  I got the following results.\r\n\r\n|   | complexity | loss          | score                 | equation                                                          | sympy_format                                  | lambda_format                                                  |\r\n|:---:|:----------:|:-------------:|:---------------------:|:-----------------------------------------------------------------:|:---------------------------------------------:|:--------------------------------------------------------------:|\r\n| 0 | 1          | 37.918518     | 0.0                   | 4.501644                                                          | 4.50164400000000                              | PySRFunction(X=>4.50164400000000)                              |\r\n| 1 | 3          | 2.887665      | 1.287495688636072     | (x0 * x0)                                                         | x0**2                                         | PySRFunction(X=>x0**2)                                         |\r\n| 2 | 5          | 2.8626113     | 0.0043569834259625665 | (x0 * (x0 * 0.97915745))                                          | 0.97915745*x0**2                              | PySRFunction(X=>0.97915745*x0**2)                              |\r\n| 3 | 6          | 1.1332736     | 0.9266238145378896    | ((x0 * x0) + cos(x3))                                             | x0**2 + cos(x3)                               | PySRFunction(X=>x0**2 + cos(x3))                               |\r\n| 4 | 8          | 0.23931366    | 0.777545319110213     | ((x0 * x0) + (cos(x3) * 2.3865998))                               | x0**2 + 2.3865998*cos(x3)                     | PySRFunction(X=>x0**2 + 2.3865998*cos(x3))                     |\r\n| 5 | 9          | 0.23632519    | 0.012566296155662461  | ((x0 * x0) + (sin(cos(x3)) * 2.7109928))                          | x0**2 + 2.7109928*sin(cos(x3))                | PySRFunction(X=>x0**2 + 2.7109928*sin(cos(x3)))                |\r\n| 6 | 10         | 2.2233993e-13 | 27.692022469244964    | ((x0 * x0) + ((cos(x3) + -0.19699001) * 2.5382))                  | x0**2 + 2.5382*cos(x3) - 0.500000043382       | PySRFunction(X=>x0**2 + 2.5382*cos(x3) - 0.500000043382)       |\r\n| 7 | 12         | 1.9617641e-13 | 0.0625965607621989    | ((x0 * x0) + ((cos(x3) * (2.0843496 * 1.2177418)) + -0.50000006)) | x0**2 + 2.53819963373328*cos(x3) - 0.50000006 | PySRFunction(X=>x0**2 + 2.53819963373328*cos(x3) - 0.50000006) |\r\n\r\nI wonder whether there are something wrong with my pkgs or project structures. Looking forward to your reply.\r\n***\r\nBesides, when I add `print(model.latex_table(precision=3, include_score=True))`  at the end of the above script, an error occurred.\r\n`TypeError: latex_table() got an unexpected keyword argument 'include_score'`\r\n\r\n\r\n***\r\nI just started learning programming, and my English is not very proficient. Please forgive me if I have offended or made low-level mistakes.\r\n\r\nBest,\r\nKer",
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "MilesCranmer"
              },
              "body": "Thanks very much for the bug report. This looks like the scikit-learn version being installed is out-of-date, so I either need to implement a version requirement, or need to add a fallback method.",
              "createdAt": "2023-07-30T17:59:01Z"
            },
            {
              "author": {
                "login": "MilesCranmer"
              },
              "body": "Let me know if you still run into any issues",
              "createdAt": "2023-07-30T22:11:22Z"
            },
            {
              "author": {
                "login": "noneaddress"
              },
              "body": "> Let me know if you still run into any issues\r\n\r\nHi Miles Cranmer. `pysr` runs normally after upgrading to 0.15.1 with pip. However, I encountered these warnings .\r\n\r\n```\r\n`UserWarning: `torch` was loaded before the Julia instance started. This may cause a segfault when running `PySRRegressor.fit`. To avoid this, please run `pysr.julia_helpers.init_julia()` *before* importing `torch`. For updates, see https://github.com/pytorch/pytorch/issues/78829\r\n  \"`torch` was loaded before the Julia instance started. \"`\r\n\r\n`E:\\CondaFolder\\envs\\env_one\\lib\\site-packages\\pysr\\julia_helpers.py:209: UserWarning: Your system's Python library is static (e.g., conda), so precompilation will be turned off. For a dynamic library, try using `pyenv` and installing with `--enable-shared`: https://github.com/pyenv/pyenv/blob/master/plugins/python-build/README.md#building-with---enable-shared.\r\n  \"Your system's Python library is static (e.g., conda), so precompilation will be turned off. For a dynamic library, try using `pyenv` and installing with `--enable-shared`: https://github.com/pyenv/pyenv/blob/master/plugins/python-build/README.md#building-with---enable-shared.\"`\r\n```\r\n\r\nIt provides detailed info, and I am confident to handle these. Thank you for developing `pysr` and fixing the bug so quickly~\r\n",
              "createdAt": "2023-07-31T02:48:41Z"
            },
            {
              "author": {
                "login": "MilesCranmer"
              },
              "body": "Cool. Yes, those warnings are unrelated â€“ feel free to address if you desire.",
              "createdAt": "2023-07-31T02:53:27Z"
            }
          ],
          "pageInfo": {
            "hasNextPage": false,
            "endCursor": "Y3Vyc29yOnYyOpHOYspACg=="
          }
        }
      }
    }
  }
}
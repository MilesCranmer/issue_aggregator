{
  "data": {
    "repository": {
      "issue": {
        "number": 267,
        "title": "[BUG] could not load library \"libgit2\"",
        "body": "I'm seeing this issue on Windows 10. Python 3.10, Julia 1.8.5. PySR 0.11.14.\r\n```\r\npython -c \"import pysr; pysr.install()\"\r\n```\r\n\r\nwill result in:\r\n\r\n```\r\n  Memory: 11.99899673461914 GB (6281.5859375 MB free)\r\n  Uptime: 2551.312 sec\r\n  Load Avg:  0.0  0.0  0.0\r\n  WORD_SIZE: 64\r\n  LIBM: libopenlibm\r\n  LLVM: libLLVM-13.0.1 (ORCJIT, haswell)\r\n  Threads: 1 on 8 virtual cores\r\nEnvironment:\r\n  JULIA_PROJECT = @pysr-0.11.14\r\n  HOMEDRIVE = C:\r\n  HOMEPATH = \\Users\\Shadow\r\n  PATH = C:\\Users\\Shadow\\Documents\\PySR\\venv\\Scripts;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files\\Git\\cmd;C:\\Users\\Shadow\\AppData\\Local\\Programs\\Python\\Python310\\Scripts\\;C:\\Users\\Shadow\\AppData\\Local\\Programs\\Python\\Python310\\;C:\\Users\\Shadow\\AppData\\Local\\Microsoft\\WindowsApps;;C:\\Users\\Shadow\\AppData\\Local\\Programs\\Microsoft VS Code\\bin\r\n  PATHEXT = .COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC\r\n  PSMODULEPATH = C:\\Program Files\\WindowsPowerShell\\Modules;C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\r\n  _OLD_VIRTUAL_PATH = C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files\\Git\\cmd;C:\\Users\\Shadow\\AppData\\Local\\Programs\\Python\\Python310\\Scripts\\;C:\\Users\\Shadow\\AppData\\Local\\Programs\\Python\\Python310\\;C:\\Users\\Shadow\\AppData\\Local\\Microsoft\\WindowsApps;;C:\\Users\\Shadow\\AppData\\Local\\Programs\\Microsoft VS Code\\bin\r\n[ Info: Julia executable: C:\\Users\\Shadow\\.julia\\juliaup\\julia-1.8.5+0.x64.w64.mingw32\\bin\\julia.exe\r\n[ Info: Trying to import PyCall...\r\n┌ Info: PyCall is already installed and compatible with Python executable.\r\n│\r\n│ PyCall:\r\n│     python: C:\\Users\\Shadow\\Documents\\PySR\\venv\\Scripts\\python.exe\r\n│     libpython: C:\\Users\\Shadow\\AppData\\Local\\Programs\\Python\\Python310\\python310.dll\r\n│ Python:\r\n│     python: C:\\Users\\Shadow\\Documents\\PySR\\venv\\Scripts\\python.exe\r\n└     libpython: C:\\Users\\Shadow\\AppData\\Local\\Programs\\Python\\Python310\\python310.dll\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"C:\\Users\\Shadow\\Documents\\PySR\\pysr\\julia_helpers.py\", line 96, in install\r\n    _add_sr_to_julia_project(Main, io_arg)\r\n  File \"C:\\Users\\Shadow\\Documents\\PySR\\pysr\\julia_helpers.py\", line 258, in _add_sr_to_julia_project\r\n    Main.eval(f\"Pkg.add([sr_spec, clustermanagers_spec], {io_arg})\")\r\n  File \"C:\\Users\\Shadow\\Documents\\PySR\\venv\\lib\\site-packages\\julia\\core.py\", line 627, in eval\r\n    ans = self._call(src)\r\n  File \"C:\\Users\\Shadow\\Documents\\PySR\\venv\\lib\\site-packages\\julia\\core.py\", line 555, in _call\r\n    self.check_exception(src)\r\n  File \"C:\\Users\\Shadow\\Documents\\PySR\\venv\\lib\\site-packages\\julia\\core.py\", line 609, in check_exception\r\n    raise JuliaError(u'Exception \\'{}\\' occurred while calling julia code:\\n{}'\r\njulia.core.JuliaError: Exception 'could not load library \"libgit2\"\r\nThe specified module could not be found. ' occurred while calling julia code:\r\nPkg.add([sr_spec, clustermanagers_spec], io=stderr)\r\n```\r\n\r\nI have installed Julia 1.8.5 using `winget` (recommended by juliaup). However, it seems like perhaps it does not find `libgit2`, even though I am able to install git packages via Julia REPL?",
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "MilesCranmer"
              },
              "body": "I was able to fix this by uninstalling the `winget` version, and just installing the official binary from the Julia website.",
              "createdAt": "2023-02-18T02:49:08Z"
            },
            {
              "author": {
                "login": "sakimarquis"
              },
              "body": "I met the same problem in windows 11. And after unstalling juliaup and reinstalling the official Julia binary. I got a new error message. I can't solve it by installing SymbolicRegression.jl manually.\r\n\r\nI solved this by installing in wsl. \r\n\r\n```\r\nJulia Version 1.9.3\r\nCommit bed2cd540a (2023-08-24 14:43 UTC)\r\nBuild Info:\r\n  Official https://julialang.org/ release\r\nPlatform Info:\r\n  OS: Windows (x86_64-w64-mingw32)\r\n      Microsoft Windows [Version 10.0.22621.2361]\r\n  CPU: 12th Gen Intel(R) Core(TM) i9-12900F:\r\n                 speed         user         nice          sys         idle          irq\r\n       #1-24  2419 MHz    8294552            0     23827319    1985108785       330678  ticks\r\n  Memory: 63.797027587890625 GB (44775.7265625 MB free)\r\n  Uptime: 84051.562 sec\r\n  Load Avg:  0.0  0.0  0.0\r\n  WORD_SIZE: 64\r\n  LIBM: libopenlibm\r\n  LLVM: libLLVM-14.0.6 (ORCJIT, alderlake)\r\n  Threads: 1 on 24 virtual cores\r\nEnvironment:\r\n  JULIA_PROJECT = @pysr-0.16.3\r\n  CHOCOLATEYLASTPATHUPDATE = \"133202940231174213\"\r\n  CUDA_PATH = C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v11.7\r\n  CUDA_PATH_V11_7 = C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v11.7\r\n  HOMEDRIVE = P:\r\n  HOMEPATH = \\\r\n  HOMESHARE = \\\\mbb\\psychdept\\users\\hdx\r\n  NVTOOLSEXT_PATH = C:\\Program Files\\NVIDIA Corporation\\NvToolsExt\\\r\n  PATH = C:\\Users\\hdx\\AppData\\Local\\miniconda3\\envs\\pysr;C:\\Users\\hdx\\AppData\\Local\\miniconda3\\envs\\pysr\\Library\\mingw-w64\\bin;C:\\Users\\hdx\\AppData\\Local\\miniconda3\\envs\\pysr\\Library\\usr\\bin;C:\\Users\\hdx\\AppData\\Local\\miniconda3\\envs\\pysr\\Library\\bin;C:\\Users\\hdx\\AppData\\Local\\miniconda3\\envs\\pysr\\Scripts;C:\\Users\\hdx\\AppData\\Local\\miniconda3\\envs\\pysr\\bin;C:\\Users\\hdx\\AppData\\Local\\miniconda3\\condabin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v11.7\\bin;C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v11.7\\libnvvp;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0;C:\\Windows\\System32\\OpenSSH;C:\\Program Files\\dotnet;C:\\Program Files\\MATLAB\\R2022b\\bin;C:\\Program Files\\Microsoft VS Code\\bin;C:\\ProgramData\\chocolatey\\bin;C:\\Program Files\\NVIDIA Corporation\\Nsight Compute 2022.2.0;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files\\NVIDIA Corporation\\NVIDIA NvDLISR;C:\\Anaconda3;C:\\Anaconda3\\Scripts;C:\\Program Files\\Git\\cmd;C:\\Program Files\\PowerShell\\7;C:\\Users\\hdx\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\hdx\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\hdx\\Julia\\bin\r\n  PATHEXT = .COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL\r\n  PSMODULEPATH = C:\\Users\\hdx\\Documents\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\r\n[ Info: Julia executable: C:\\Users\\hdx\\Julia\\bin\\julia.exe\r\n[ Info: Trying to import PyCall...\r\n┌ Info: PyCall is already installed and compatible with Python executable.\r\n│\r\n│ PyCall:\r\n│     python: C:\\Users\\hdx\\AppData\\Local\\miniconda3\\envs\\pysr\\python.exe\r\n│     libpython: C:\\Users\\hdx\\AppData\\Local\\miniconda3\\envs\\pysr\\python310.dll\r\n│ Python:\r\n│     python: C:\\Users\\hdx\\AppData\\Local\\miniconda3\\envs\\pysr\\python.exe\r\n└     libpython: C:\\Users\\hdx\\AppData\\Local\\miniconda3\\envs\\pysr\\python310.dll\r\n    Updating registry at `C:\\Users\\hdx\\.julia\\registries\\General.toml`\r\n     Cloning git-repo `https://github.com/MilesCranmer/SymbolicRegression.jl`\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\hdx\\AppData\\Local\\miniconda3\\envs\\pysr\\lib\\runpy.py\", line 196, in _run_module_as_main\r\n    return _run_code(code, main_globals, None,\r\n  File \"C:\\Users\\hdx\\AppData\\Local\\miniconda3\\envs\\pysr\\lib\\runpy.py\", line 86, in _run_code\r\n    exec(code, run_globals)\r\n  File \"C:\\Users\\hdx\\AppData\\Local\\miniconda3\\envs\\pysr\\lib\\site-packages\\pysr\\__main__.py\", line 4, in <module>\r\n    _cli(prog_name=\"pysr\")\r\n  File \"C:\\Users\\hdx\\AppData\\Local\\miniconda3\\envs\\pysr\\lib\\site-packages\\click\\core.py\", line 1128, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"C:\\Users\\hdx\\AppData\\Local\\miniconda3\\envs\\pysr\\lib\\site-packages\\click\\core.py\", line 1053, in main\r\n    rv = self.invoke(ctx)\r\n  File \"C:\\Users\\hdx\\AppData\\Local\\miniconda3\\envs\\pysr\\lib\\site-packages\\click\\core.py\", line 1659, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"C:\\Users\\hdx\\AppData\\Local\\miniconda3\\envs\\pysr\\lib\\site-packages\\click\\core.py\", line 1395, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"C:\\Users\\hdx\\AppData\\Local\\miniconda3\\envs\\pysr\\lib\\site-packages\\click\\core.py\", line 754, in invoke\r\n    return __callback(*args, **kwargs)\r\n  File \"C:\\Users\\hdx\\AppData\\Local\\miniconda3\\envs\\pysr\\lib\\site-packages\\pysr\\_cli\\main.py\", line 37, in _install\r\n    install(julia_project, quiet, precompile)\r\n  File \"C:\\Users\\hdx\\AppData\\Local\\miniconda3\\envs\\pysr\\lib\\site-packages\\pysr\\julia_helpers.py\", line 109, in install\r\n    _add_sr_to_julia_project(Main, io_arg)\r\n  File \"C:\\Users\\hdx\\AppData\\Local\\miniconda3\\envs\\pysr\\lib\\site-packages\\pysr\\julia_helpers.py\", line 272, in _add_sr_to_julia_project\r\n    Main.eval(f\"Pkg.add([sr_spec, clustermanagers_spec], {io_arg})\")\r\n  File \"C:\\Users\\hdx\\AppData\\Local\\miniconda3\\envs\\pysr\\lib\\site-packages\\julia\\core.py\", line 627, in eval\r\n    ans = self._call(src)\r\n  File \"C:\\Users\\hdx\\AppData\\Local\\miniconda3\\envs\\pysr\\lib\\site-packages\\julia\\core.py\", line 555, in _call\r\n    self.check_exception(src)\r\n  File \"C:\\Users\\hdx\\AppData\\Local\\miniconda3\\envs\\pysr\\lib\\site-packages\\julia\\core.py\", line 609, in check_exception\r\n    raise JuliaError(u'Exception \\'{}\\' occurred while calling julia code:\\n{}'\r\njulia.core.JuliaError: Exception 'failed to clone from https://github.com/MilesCranmer/SymbolicRegression.jl, error: GitError(Code:ERROR, Class:SSL, Your Julia is built with a SSL/TLS engine that libgit2 doesn't know how to configure to use a file or directory of certificate authority roots, but your environment specifies one via the SSL_CERT_FILE variable. If you believe your system's root certificates are safe to use, you can `export JULIA_SSL_CA_ROOTS_PATH=\"\"` in your environment to use those instead.)' occurred while calling julia code:\r\nPkg.add([sr_spec, clustermanagers_spec], io=stderr)\r\n```",
              "createdAt": "2023-09-29T15:27:27Z"
            },
            {
              "author": {
                "login": "MilesCranmer"
              },
              "body": "Your issue might be different. It says:\r\n\r\nException 'failed to clone from https://github.com/MilesCranmer/SymbolicRegression.jl, error: GitError(Code:ERROR, Class:SSL, Your Julia is built with a SSL/TLS engine that libgit2 doesn't know how to configure to use a file or directory of certificate authority roots, but your environment specifies one via the SSL_CERT_FILE variable. If you believe your system's root certificates are safe to use, you can `export JULIA_SSL_CA_ROOTS_PATH=\"\"` in your environment to use those instead.)'\r\n\r\nSo it sounds like it **can** find libgit2 , but libgit2 is incompatible with the SSL engine used in Julia. So for this issue I might raise it on the Julia forums? https://discourse.julialang.org\r\n\r\nI think you could get around this by running the following in the Julia REPL. First, hit `]` to turn on Pkg mode. Then,\r\n\r\n```julia\r\nactivate @pysr-0.16.3\r\nrm SymbolicRegression ClusterManagers DynamicExpressions\r\nadd SymbolicRegression ClusterManagers DynamicExpressions\r\n```\r\n\r\nThis should hopefully install the versions from the Julia registry, avoiding the GitHub repo. Replace 0.16.3 with whatever pysr version it is.\r\n\r\nIf you are using an older PySR version you might need to specify the version of SymbolicRegression.jl as well. (I think it's `SymbolicRegression==0.22.4`).",
              "createdAt": "2023-09-29T17:40:26Z"
            },
            {
              "author": {
                "login": "mariapintos"
              },
              "body": "Hello Miles, the Julia forum woudlnt let me reply to the thread anymore, since I am new to the community and already exhausted the number of replies. PySR is already running thanks to this\r\n\r\n```python\r\nimport os\r\nos.environ[\"JULIA_SSL_CA_ROOTS_PATH\"] = \"\"\r\n\r\nimport pysr\r\npysr.install()  # Only for PySR < v0.17\r\n```\r\n\r\nThank you so much for your help, really appreciated!",
              "createdAt": "2024-02-08T16:35:52Z"
            }
          ],
          "pageInfo": {
            "hasNextPage": false,
            "endCursor": "Y3Vyc29yOnYyOpHOc047tw=="
          }
        }
      }
    }
  }
}
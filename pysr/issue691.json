{
  "data": {
    "repository": {
      "issue": {
        "number": 691,
        "title": "[Feature]: Random Seed for Reproducibility",
        "body": "### Feature Request\r\n\r\nFor a paper, I am trying to make my code reproducible. I have set python random seed. Still every time it runs it provides different results. \r\n\r\nIs it posslbe to set a random seed? I cant find it in the docs.\r\n\r\n```python\r\n# %%\r\nimport numpy as np\r\nimport pandas as pd\r\nfrom pysr import PySRRegressor\r\n\r\n# Random seed\r\nnp.random.seed(42)\r\n\r\ndata_dict = {\r\n    100: {\r\n        \"x_data\": [10, 20, 30, 40, 50, 60, 70, 80, 90, 100],\r\n        \"means\": [0.0, 0.2625, 0.7275, 0.86, 0.9125, 0.94, 0.9325, 0.95, 0.9624999999999999, 0.9775] \r\n    },\r\n    1000: {\r\n        \"x_data\": [10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 120, 140, 160, 180],\r\n        \"means\": [0.0, 0.0, 0.115, 0.6116666666666667, 0.855, 0.9550000000000001, 0.97, 0.9525, 0.9624999999999999, 0.94, 0.9724999999999999, 0.975, 0.985, 0.9875] \r\n    },\r\n    3162: {\r\n        \"x_data\": [10, 20, 30, 40, 50, 60, 70, 80, 90],\r\n        \"means\": [0.0, 0.0, 0.0025, 0.6375, 0.8925000000000001, 0.8925000000000001, 0.935, 0.9425, 0.98] \r\n    },\r\n    10000: {\r\n        \"x_data\": [10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 120, 140, 160, 180],\r\n        \"means\": [0.0, 0.0, 0.0075, 0.28, 0.755, 0.9199999999999999, 0.8825000000000001, 0.9299999999999999, 0.955, 0.9624999999999999, 0.9775, 0.95, 0.9775, 0.985]\r\n    },\r\n    100000: {\r\n        \"x_data\": [10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 120, 140, 160, 180],\r\n        \"means\": [0.0, 0.0, 0.0, 0.2525, 0.5575, 0.7050000000000001, 0.7525, 0.8175, 0.9325, 0.83, 0.93, 0.85, 0.94, 0.97] \r\n    }\r\n}\r\n\r\n# Creating and concatenating DataFrames\r\ndata_frames = []\r\nfor n, data in data_dict.items():\r\n    df = pd.DataFrame(data)\r\n    df[\"n\"] = n\r\n    data_frames.append(df)\r\n\r\n# Concatenate all DataFrames\r\ndf = pd.concat(data_frames)\r\n\r\ndf = df[df['x_data']>19]\r\ndf = df[df['x_data']<101]\r\n# %%\r\nX = df[[\"x_data\", \"n\"]]\r\ny = df[\"means\"]\r\n\r\n# %%\r\n# Initialize and fit the symbolic regressor\r\nmodel = PySRRegressor(\r\n    binary_operators=[\"*\", \"^\",\"+\", \"/\"],\r\n    unary_operators=['exp'],\r\n    # dimensional_constraint_penalty=10**5,\r\n)\r\n# %%\r\n# Fit the model\r\nmodel.fit(X, y)\r\nmodel\r\n```\r\n",
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "cmougan"
              },
              "body": "Also, often the algorithm gets stuck in an iteration. Sometimes it takes 2 secs",
              "createdAt": "2024-08-03T09:25:06Z"
            },
            {
              "author": {
                "login": "MilesCranmer"
              },
              "body": "You can use `deterministic=True` in the PySRRegressor. See the docs here: https://astroautomata.com/PySR/api/",
              "createdAt": "2024-08-03T15:56:09Z"
            },
            {
              "author": {
                "login": "cmougan"
              },
              "body": "Thanks! I see its in the API, but its not in the detailed example https://astroautomata.com/PySR/",
              "createdAt": "2024-08-03T16:36:04Z"
            },
            {
              "author": {
                "login": "MilesCranmer"
              },
              "body": "Yeah there are too many features to have them all in the detailed example and still have it be useful. But maybe in the Toy examples page it could be good? https://astroautomata.com/PySR/examples/\r\n\r\nIf you are interested it becoming a PySR contributor I'd welcome a PR adding a toy example to that page demonstrating deterministic settings :)",
              "createdAt": "2024-08-03T16:46:50Z"
            },
            {
              "author": {
                "login": "cmougan"
              },
              "body": "Thanks! We are writting a paper about finding scaling laws of LLMs. I am trying to use your work here. If everything goes all right I will be happy to write an example if you find it meaningful. ",
              "createdAt": "2024-08-03T16:51:15Z"
            }
          ],
          "pageInfo": {
            "hasNextPage": false,
            "endCursor": "Y3Vyc29yOnYyOpHOhyAWPA=="
          }
        }
      }
    }
  }
}
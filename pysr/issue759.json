{
  "data": {
    "repository": {
      "issue": {
        "number": 759,
        "title": "[BUG]: Getting some \"juliacall.JuliaError\" errors since the update to v1.0.0",
        "body": "### What happened?\n\nSince the update to v1.0.0, I already had a job crash twice, while I did not have such problems before. I'm adding the stacktrace from the logs of both jobs.\n\n### Version\n\nv1.0.0\n\n### Operating System\n\nLinux\n\n### Package Manager\n\npip\n\n### Interface\n\nScript (i.e., `python my_script.py`)\n\n### Relevant log output\n\n```shell\njuliacall.JuliaError: TaskFailedException\r\nStacktrace:\r\n  [1] wait(t::Task)\r\n    @ Base ./task.jl:370\r\n  [2] fetch\r\n    @ ./task.jl:390 [inlined]\r\n  [3] _main_search_loop!(state::SymbolicRegression.SearchUtilsModule.SearchState{Float32, Float32, Expression{Float32, Node{Float32}, @NamedTuple{operators::Nothing, variable_names::Nothing}}, Distributed.Future, Distributed.RemoteChannel}, datasets::Vector{Dataset{Float32, Float32, Matrix{Float32}, Vector{Float32}, Nothing, @NamedTuple{}, Nothing, Nothing, Nothing, Nothing}}, ropt::SymbolicRegression.SearchUtilsModule.RuntimeOptions{:multiprocessing, 1, true, Nothing}, options::Options{SymbolicRegression.CoreModule.OptionsStructModule.ComplexityMapping{Int64, Int64}, DynamicExpressions.OperatorEnumModule.OperatorEnum, Node, Expression, @NamedTuple{}, MutationWeights, false, false, nothing, Nothing, 5})\r\n    @ SymbolicRegression ~/.julia/packages/SymbolicRegression/44X04/src/SymbolicRegression.jl:833\r\n  [4] _equation_search(datasets::Vector{Dataset{Float32, Float32, Matrix{Float32}, Vector{Float32}, Nothing, @NamedTuple{}, Nothing, Nothing, Nothing, Nothing}}, ropt::SymbolicRegression.SearchUtilsModule.RuntimeOptions{:multiprocessing, 1, true, Nothing}, options::Options{SymbolicRegression.CoreModule.OptionsStructModule.ComplexityMapping{Int64, Int64}, DynamicExpressions.OperatorEnumModule.OperatorEnum, Node, Expression, @NamedTuple{}, MutationWeights, false, false, nothing, Nothing, 5}, saved_state::Nothing)\r\n    @ SymbolicRegression ~/.julia/packages/SymbolicRegression/44X04/src/SymbolicRegression.jl:535\r\n  [5] equation_search(datasets::Vector{Dataset{Float32, Float32, Matrix{Float32}, Vector{Float32}, Nothing, @NamedTuple{}, Nothing, Nothing, Nothing, Nothing}}; options::Options{SymbolicRegression.CoreModule.OptionsStructModule.ComplexityMapping{Int64, Int64}, DynamicExpressions.OperatorEnumModule.OperatorEnum, Node, Expression, @NamedTuple{}, MutationWeights, false, false, nothing, Nothing, 5}, saved_state::Nothing, runtime_options::Nothing, runtime_options_kws::@Kwargs{niterations::Int64, parallelism::String, numprocs::Int64, procs::Nothing, addprocs_function::typeof(addprocs_slurm), heap_size_hint_in_bytes::Nothing, runtests::Bool, return_state::Bool, run_id::String, verbosity::Int64, logger::Nothing, progress::Bool, v_dim_out::Val{1}})\r\n    @ SymbolicRegression ~/.julia/packages/SymbolicRegression/44X04/src/SymbolicRegression.jl:525\r\n  [6] equation_search\r\n    @ ~/.julia/packages/SymbolicRegression/44X04/src/SymbolicRegression.jl:506 [inlined]\r\n  [7] #equation_search#20\r\n    @ ~/.julia/packages/SymbolicRegression/44X04/src/SymbolicRegression.jl:476 [inlined]\r\n  [8] equation_search\r\n    @ ~/.julia/packages/SymbolicRegression/44X04/src/SymbolicRegression.jl:422 [inlined]\r\n  [9] #equation_search#21\r\n    @ ~/.julia/packages/SymbolicRegression/44X04/src/SymbolicRegression.jl:499 [inlined]\r\n [10] pyjlany_call(self::typeof(equation_search), args_::Py, kwargs_::Py)\r\n    @ PythonCall.JlWrap ~/.julia/packages/PythonCall/Nr75f/src/JlWrap/any.jl:40\r\n [11] _pyjl_callmethod(f::Any, self_::Ptr{PythonCall.C.PyObject}, args_::Ptr{PythonCall.C.PyObject}, nargs::Int64)\r\n    @ PythonCall.JlWrap ~/.julia/packages/PythonCall/Nr75f/src/JlWrap/base.jl:73\r\n [12] _pyjl_callmethod(o::Ptr{PythonCall.C.PyObject}, args::Ptr{PythonCall.C.PyObject})\r\n    @ PythonCall.JlWrap.Cjl ~/.julia/packages/PythonCall/Nr75f/src/JlWrap/C.jl:63\r\n\r\n    nested task error: On worker 3:\r\n    DomainError with Inf:\r\n    sin(x) is only defined for finite x.\r\n    Stacktrace:\r\n      [1] sin_domain_error\r\n        @ ./special/trig.jl:28\r\n      [2] sin\r\n        @ ./special/trig.jl:39\r\n      [3] deg1_eval_constant\r\n        @ ~/.julia/packages/DynamicExpressions/LMkFg/src/Evaluate.jl:632\r\n      [4] macro expansion\r\n        @ ~/.julia/packages/DynamicExpressions/LMkFg/src/Evaluate.jl:585 [inlined]\r\n      [5] dispatch_constant_tree\r\n        @ ~/.julia/packages/DynamicExpressions/LMkFg/src/Evaluate.jl:574\r\n      [6] deg1_eval_constant\r\n        @ ~/.julia/packages/DynamicExpressions/LMkFg/src/Evaluate.jl:630\r\n      [7] macro expansion\r\n        @ ~/.julia/packages/DynamicExpressions/LMkFg/src/Evaluate.jl:585 [inlined]\r\n      [8] dispatch_constant_tree\r\n        @ ~/.julia/packages/DynamicExpressions/LMkFg/src/Evaluate.jl:574\r\n      [9] _eval_tree_array\r\n        @ ~/.julia/packages/DynamicExpressions/LMkFg/src/Evaluate.jl:199\r\n     [10] macro expansion\r\n        @ ~/.julia/packages/DynamicExpressions/LMkFg/src/Evaluate.jl:290 [inlined]\r\n     [11] dispatch_deg2_eval\r\n        @ ~/.julia/packages/DynamicExpressions/LMkFg/src/Evaluate.jl:246\r\n     [12] _eval_tree_array\r\n        @ ~/.julia/packages/DynamicExpressions/LMkFg/src/Evaluate.jl:209\r\n     [13] #eval_tree_array#2\r\n        @ ~/.julia/packages/DynamicExpressions/LMkFg/src/Evaluate.jl:156\r\n     [14] eval_tree_array\r\n        @ ~/.julia/packages/DynamicExpressions/LMkFg/src/Evaluate.jl:131 [inlined]\r\n     [15] #eval_tree_array#1\r\n        @ ~/.julia/packages/SymbolicRegression/44X04/src/InterfaceDynamicExpressions.jl:62 [inlined]\r\n     [16] eval_tree_array\r\n        @ ~/.julia/packages/SymbolicRegression/44X04/src/InterfaceDynamicExpressions.jl:55 [inlined]\r\n     [17] mape_mse_no_const_loss\r\n        @ ./none:10\r\n     [18] evaluator\r\n        @ ~/.julia/packages/SymbolicRegression/44X04/src/LossFunctions.jl:133\r\n     [19] #eval_loss#3\r\n        @ ~/.julia/packages/SymbolicRegression/44X04/src/LossFunctions.jl:149\r\n     [20] eval_loss\r\n        @ ~/.julia/packages/SymbolicRegression/44X04/src/LossFunctions.jl:138 [inlined]\r\n     [21] #_#1\r\n        @ ~/.julia/packages/SymbolicRegression/44X04/src/ConstantOptimization.jl:115 [inlined]\r\n     [22] Evaluator\r\n        @ ~/.julia/packages/SymbolicRegression/44X04/src/ConstantOptimization.jl:113 [inlined]\r\n     [23] #finite_difference_gradient!#10\r\n        @ ~/.julia/packages/FiniteDiff/uMUWB/src/gradients.jl:373\r\n     [24] finite_difference_gradient!\r\n        @ ~/.julia/packages/FiniteDiff/uMUWB/src/gradients.jl:313 [inlined]\r\n     [25] g!\r\n        @ ~/.julia/packages/NLSolversBase/kavn7/src/objective_types/oncedifferentiable.jl:57\r\n     [26] fg!\r\n        @ ~/.julia/packages/NLSolversBase/kavn7/src/objective_types/oncedifferentiable.jl:61\r\n     [27] value_gradient!!\r\n        @ ~/.julia/packages/NLSolversBase/kavn7/src/interface.jl:82\r\n     [28] initial_state\r\n        @ ~/.julia/packages/Optim/fBdaz/src/multivariate/solvers/first_order/bfgs.jl:94\r\n     [29] optimize\r\n        @ ~/.julia/packages/Optim/fBdaz/src/multivariate/optimize/optimize.jl:36 [inlined]\r\n     [30] #optimize#91\r\n        @ ~/.julia/packages/Optim/fBdaz/src/multivariate/optimize/interface.jl:143 [inlined]\r\n     [31] optimize\r\n        @ ~/.julia/packages/Optim/fBdaz/src/multivariate/optimize/interface.jl:139 [inlined]\r\n     [32] _optimize_constants\r\n        @ ~/.julia/packages/SymbolicRegression/44X04/src/ConstantOptimization.jl:82\r\n     [33] dispatch_optimize_constants\r\n        @ ~/.julia/packages/SymbolicRegression/44X04/src/ConstantOptimization.jl:46\r\n     [34] optimize_constants\r\n        @ ~/.julia/packages/SymbolicRegression/44X04/src/ConstantOptimization.jl:27 [inlined]\r\n     [35] #mutate!#20\r\n        @ ~/.julia/packages/SymbolicRegression/44X04/src/Mutate.jl:598\r\n     [36] mutate!\r\n        @ ~/.julia/packages/SymbolicRegression/44X04/src/Mutate.jl:588 [inlined]\r\n     [37] macro expansion\r\n        @ ~/.julia/packages/SymbolicRegression/44X04/src/Mutate.jl:361 [inlined]\r\n     [38] #_dispatch_mutations!#6\r\n        @ ~/.julia/packages/SymbolicRegression/44X04/src/Mutate.jl:346\r\n     [39] _dispatch_mutations!\r\n        @ ~/.julia/packages/SymbolicRegression/44X04/src/Mutate.jl:346 [inlined]\r\n     [40] #next_generation#5\r\n        @ ~/.julia/packages/SymbolicRegression/44X04/src/Mutate.jl:198\r\n     [41] next_generation\r\n        @ ~/.julia/packages/SymbolicRegression/44X04/src/Mutate.jl:157 [inlined]\r\n     [42] reg_evol_cycle\r\n        @ ~/.julia/packages/SymbolicRegression/44X04/src/RegularizedEvolution.jl:36\r\n     [43] #s_r_cycle#1\r\n        @ ~/.julia/packages/SymbolicRegression/44X04/src/SingleIteration.jl:47\r\n     [44] s_r_cycle\r\n        @ ~/.julia/packages/SymbolicRegression/44X04/src/SingleIteration.jl:19 [inlined]\r\n     [45] #_dispatch_s_r_cycle#66\r\n        @ ~/.julia/packages/SymbolicRegression/44X04/src/SymbolicRegression.jl:1076\r\n     [46] _dispatch_s_r_cycle\r\n        @ ~/.julia/packages/SymbolicRegression/44X04/src/SymbolicRegression.jl:1059 [inlined]\r\n     [47] macro expansion\r\n        @ ~/.julia/packages/SymbolicRegression/44X04/src/SymbolicRegression.jl:920 [inlined]\r\n     [48] #58\r\n        @ ~/.julia/environments/pyjuliapkg/pyjuliapkg/install/share/julia/stdlib/v1.11/Distributed/src/macros.jl:83\r\n     [49] #invokelatest#2\r\n        @ ./essentials.jl:1055 [inlined]\r\n     [50] invokelatest\r\n        @ ./essentials.jl:1052\r\n     [51] #107\r\n        @ ~/.julia/environments/pyjuliapkg/pyjuliapkg/install/share/julia/stdlib/v1.11/Distributed/src/process_messages.jl:283\r\n     [52] run_work_thunk\r\n        @ ~/.julia/environments/pyjuliapkg/pyjuliapkg/install/share/julia/stdlib/v1.11/Distributed/src/process_messages.jl:70\r\n     [53] run_work_thunk\r\n        @ ~/.julia/environments/pyjuliapkg/pyjuliapkg/install/share/julia/stdlib/v1.11/Distributed/src/process_messages.jl:79\r\n    Stacktrace:\r\n     [1] remotecall_fetch(f::Function, w::Distributed.Worker, args::Distributed.RRID; kwargs::@Kwargs{})\r\n       @ Distributed ~/.julia/environments/pyjuliapkg/pyjuliapkg/install/share/julia/stdlib/v1.11/Distributed/src/remotecall.jl:465\r\n     [2] remotecall_fetch(f::Function, w::Distributed.Worker, args::Distributed.RRID)\r\n       @ Distributed ~/.julia/environments/pyjuliapkg/pyjuliapkg/install/share/julia/stdlib/v1.11/Distributed/src/remotecall.jl:454\r\n     [3] remotecall_fetch\r\n       @ ~/.julia/environments/pyjuliapkg/pyjuliapkg/install/share/julia/stdlib/v1.11/Distributed/src/remotecall.jl:492 [inlined]\r\n     [4] call_on_owner\r\n       @ ~/.julia/environments/pyjuliapkg/pyjuliapkg/install/share/julia/stdlib/v1.11/Distributed/src/remotecall.jl:565 [inlined]\r\n     [5] fetch\r\n       @ ~/.julia/environments/pyjuliapkg/pyjuliapkg/install/share/julia/stdlib/v1.11/Distributed/src/remotecall.jl:619\r\n     [6] (::SymbolicRegression.var\"#60#65\"{SymbolicRegression.SearchUtilsModule.SearchState{Float32, Float32, Expression{Float32, Node{Float32}, @NamedTuple{operators::Nothing, variable_names::Nothing}}, Distributed.Future, Distributed.RemoteChannel}, Int64, Int64})()\r\n       @ SymbolicRegression ~/.julia/packages/SymbolicRegression/44X04/src/SymbolicRegression.jl:936\r\n\r\n\r\n\r\njuliacall.JuliaError: TaskFailedException\r\nStacktrace:\r\n  [1] wait(t::Task)\r\n    @ Base ./task.jl:370\r\n  [2] fetch\r\n    @ ./task.jl:390 [inlined]\r\n  [3] _main_search_loop!(state::SymbolicRegression.SearchUtilsModule.SearchState{Float32, Float32, Expression{Float32, Node{Float32}, @NamedTuple{operators::Nothing, variable_names::Nothing}}, Distributed.Future, Distributed.RemoteChannel}, datasets::Vector{Dataset{Float32, Float32, Matrix{Float32}, Vector{Float32}, Nothing, @NamedTuple{}, Nothing, Nothing, Nothing, Nothing}}, ropt::SymbolicRegression.SearchUtilsModule.RuntimeOptions{:multiprocessing, 1, true, Nothing}, options::Options{SymbolicRegression.CoreModule.OptionsStructModule.ComplexityMapping{Int64, Int64}, DynamicExpressions.OperatorEnumModule.OperatorEnum, Node, Expression, @NamedTuple{}, MutationWeights, false, false, nothing, Nothing, 5})\r\n    @ SymbolicRegression ~/.julia/packages/SymbolicRegression/44X04/src/SymbolicRegression.jl:833\r\n  [4] _equation_search(datasets::Vector{Dataset{Float32, Float32, Matrix{Float32}, Vector{Float32}, Nothing, @NamedTuple{}, Nothing, Nothing, Nothing, Nothing}}, ropt::SymbolicRegression.SearchUtilsModule.RuntimeOptions{:multiprocessing, 1, true, Nothing}, options::Options{SymbolicRegression.CoreModule.OptionsStructModule.ComplexityMapping{Int64, Int64}, DynamicExpressions.OperatorEnumModule.OperatorEnum, Node, Expression, @NamedTuple{}, MutationWeights, false, false, nothing, Nothing, 5}, saved_state::Nothing)\r\n    @ SymbolicRegression ~/.julia/packages/SymbolicRegression/44X04/src/SymbolicRegression.jl:535\r\n  [5] equation_search(datasets::Vector{Dataset{Float32, Float32, Matrix{Float32}, Vector{Float32}, Nothing, @NamedTuple{}, Nothing, Nothing, Nothing, Nothing}}; options::Options{SymbolicRegression.CoreModule.OptionsStructModule.ComplexityMapping{Int64, Int64}, DynamicExpressions.OperatorEnumModule.OperatorEnum, Node, Expression, @NamedTuple{}, MutationWeights, false, false, nothing, Nothing, 5}, saved_state::Nothing, runtime_options::Nothing, runtime_options_kws::@Kwargs{niterations::Int64, parallelism::String, numprocs::Int64, procs::Nothing, addprocs_function::typeof(addprocs_slurm), heap_size_hint_in_bytes::Nothing, runtests::Bool, return_state::Bool, run_id::String, verbosity::Int64, logger::Nothing, progress::Bool, v_dim_out::Val{1}})\r\n    @ SymbolicRegression ~/.julia/packages/SymbolicRegression/44X04/src/SymbolicRegression.jl:525\r\n  [6] equation_search\r\n    @ ~/.julia/packages/SymbolicRegression/44X04/src/SymbolicRegression.jl:506 [inlined]\r\n  [7] #equation_search#20\r\n    @ ~/.julia/packages/SymbolicRegression/44X04/src/SymbolicRegression.jl:476 [inlined]\r\n  [8] equation_search\r\n    @ ~/.julia/packages/SymbolicRegression/44X04/src/SymbolicRegression.jl:422 [inlined]\r\n  [9] #equation_search#21\r\n    @ ~/.julia/packages/SymbolicRegression/44X04/src/SymbolicRegression.jl:499 [inlined]\r\n [10] pyjlany_call(self::typeof(equation_search), args_::Py, kwargs_::Py)\r\n    @ PythonCall.JlWrap ~/.julia/packages/PythonCall/Nr75f/src/JlWrap/any.jl:40\r\n [11] _pyjl_callmethod(f::Any, self_::Ptr{PythonCall.C.PyObject}, args_::Ptr{PythonCall.C.PyObject}, nargs::Int64)\r\n    @ PythonCall.JlWrap ~/.julia/packages/PythonCall/Nr75f/src/JlWrap/base.jl:73\r\n [12] _pyjl_callmethod(o::Ptr{PythonCall.C.PyObject}, args::Ptr{PythonCall.C.PyObject})\r\n    @ PythonCall.JlWrap.Cjl ~/.julia/packages/PythonCall/Nr75f/src/JlWrap/C.jl:63\r\n\r\n    nested task error: Distributed.ProcessExitedException(29)\r\n    Stacktrace:\r\n      [1] try_yieldto(undo::typeof(Base.ensure_rescheduled))\r\n        @ Base ./task.jl:958\r\n      [2] wait()\r\n        @ Base ./task.jl:1022\r\n      [3] wait(c::Base.GenericCondition{ReentrantLock}; first::Bool)\r\n        @ Base ./condition.jl:130\r\n      [4] wait\r\n        @ ./condition.jl:125 [inlined]\r\n      [5] take_buffered(c::Channel{Any})\r\n        @ Base ./channels.jl:493\r\n      [6] take!(c::Channel{Any})\r\n        @ Base ./channels.jl:487\r\n      [7] take!(::Distributed.RemoteValue)\r\n        @ Distributed ~/.julia/environments/pyjuliapkg/pyjuliapkg/install/share/julia/stdlib/v1.11/Distributed/src/remotecall.jl:726\r\n      [8] remotecall_fetch(f::Function, w::Distributed.Worker, args::Distributed.RRID; kwargs::@Kwargs{})\r\n        @ Distributed ~/.julia/environments/pyjuliapkg/pyjuliapkg/install/share/julia/stdlib/v1.11/Distributed/src/remotecall.jl:461\r\n      [9] remotecall_fetch(f::Function, w::Distributed.Worker, args::Distributed.RRID)\r\n        @ Distributed ~/.julia/environments/pyjuliapkg/pyjuliapkg/install/share/julia/stdlib/v1.11/Distributed/src/remotecall.jl:454\r\n     [10] remotecall_fetch\r\n        @ ~/.julia/environments/pyjuliapkg/pyjuliapkg/install/share/julia/stdlib/v1.11/Distributed/src/remotecall.jl:492 [inlined]\r\n     [11] call_on_owner\r\n        @ ~/.julia/environments/pyjuliapkg/pyjuliapkg/install/share/julia/stdlib/v1.11/Distributed/src/remotecall.jl:565 [inlined]\r\n     [12] fetch\r\n        @ ~/.julia/environments/pyjuliapkg/pyjuliapkg/install/share/julia/stdlib/v1.11/Distributed/src/remotecall.jl:619\r\n     [13] (::SymbolicRegression.var\"#60#65\"{SymbolicRegression.SearchUtilsModule.SearchState{Float32, Float32, Expression{Float32, Node{Float32}, @NamedTuple{operators::Nothing, variable_names::Nothing}}, Distributed.Future, Distributed.RemoteChannel}, Int64, Int64})()\r\n        @ SymbolicRegression ~/.julia/packages/SymbolicRegression/44X04/src/SymbolicRegression.jl:936\r\nWorker 29 terminated.\r\nUNHANDLED TASK ERROR: IOError: read: connection reset by peer (ECONNRESET)\r\nStacktrace:\r\n  [1] wait_readnb(x::Sockets.TCPSocket, nb::Int64)\r\n    @ Base ./stream.jl:410\r\n  [2] (::Base.var\"#wait_locked#832\")(s::Sockets.TCPSocket, buf::IOBuffer, nb::Int64)\r\n    @ Base ./stream.jl:972\r\n  [3] unsafe_read(s::Sockets.TCPSocket, p::Ptr{UInt8}, nb::UInt64)\r\n    @ Base ./stream.jl:978\r\n  [4] unsafe_read\r\n    @ ./io.jl:891 [inlined]\r\n  [5] unsafe_read(s::Sockets.TCPSocket, p::Base.RefValue{NTuple{4, Int64}}, n::Int64)\r\n    @ Base ./io.jl:890\r\n  [6] read!\r\n    @ ./io.jl:895 [inlined]\r\n  [7] deserialize_hdr_raw\r\n    @ ~/.julia/environments/pyjuliapkg/pyjuliapkg/install/share/julia/stdlib/v1.11/Distributed/src/messages.jl:167 [inlined]\r\n  [8] message_handler_loop(r_stream::Sockets.TCPSocket, w_stream::Sockets.TCPSocket, incoming::Bool)\r\n    @ Distributed ~/.julia/environments/pyjuliapkg/pyjuliapkg/install/share/julia/stdlib/v1.11/Distributed/src/process_messages.jl:172\r\n  [9] process_tcp_streams(r_stream::Sockets.TCPSocket, w_stream::Sockets.TCPSocket, incoming::Bool)\r\n    @ Distributed ~/.julia/environments/pyjuliapkg/pyjuliapkg/install/share/julia/stdlib/v1.11/Distributed/src/process_messages.jl:133\r\n [10] (::Distributed.var\"#103#104\"{Sockets.TCPSocket, Sockets.TCPSocket, Bool})()\r\n    @ Distributed ~/.julia/environments/pyjuliapkg/pyjuliapkg/install/share/julia/stdlib/v1.11/Distributed/src/process_messages.jl:121\n```\n\n\n### Extra Info\n\nIn both cases I was running in distributed mode (cluster_manager='slurm'), with 30 CPU cores. The dataset has around 2500 records, but only two features. It's unfortunately not possible to share the full Python script I'm using, but here are the main parameters used when calling PySRRegressor:\r\n`niterations=10000000, binary_operators=[\"+\", \"-\", \"*\", \"/\"], unary_operators=[\"exp\", \"sin\", \"square\", \"cube\", \"sqrt\"], procs=30, populations=450, cluster_manager='slurm', ncycles_per_iteration=20000, batching=False, weight_optimize=0.35, parsimony=1, adaptive_parsimony_scaling=1000, maxsize=35, parallelism='multiprocessing', bumper=False\r\n`",
        "comments": {
          "nodes": [
            {
              "author": {
                "login": "MilesCranmer"
              },
              "body": "Interesting. If you have time do you think you could check whether removing the `sin` operator makes the error go away?\r\n\r\nIf yes (and the error goes away), then I think I know how to solve it. (I think `deg0_eval_constant(tree::AbstractExpressionNode{T})` in DynamicExpressions needs to change from `true` to `is_valid(output)` - which would catch `Inf` stored in `.val`, meaning the optimizer/mutation generated an infinite value and stored it in the tree)\r\n\r\nIf no, then it's probably more challenging.",
              "createdAt": "2024-12-02T23:53:25Z"
            },
            {
              "author": {
                "login": "MilesCranmer"
              },
              "body": "As a temp workaround you could just use this instead:\r\n```python\r\n\"safe_sin(x) = isfinite(x) ? sin(x) : convert(typeof(x), NaN)\"\r\n```\r\nWhich should fix it. Although it’s not ideal.\r\n\r\n(and for the sympy mapping just put regular sin)",
              "createdAt": "2024-12-03T00:24:54Z"
            },
            {
              "author": {
                "login": "GoldenGoldy"
              },
              "body": "Thanks for the quick reply! Yes, sure I'll try running without the `sin` operator and see if the error goes away, and also try running again with the `sin` operator to see if the error occurs again.\r\nAnd I'll also try the `safe_sin(x)` to see if that runs without errors.\r\nI'll report back when I have some findings, I'll have to let it run for quite a while though to have some degree of certainty that no errors occur.",
              "createdAt": "2024-12-03T07:18:01Z"
            },
            {
              "author": {
                "login": "GoldenGoldy"
              },
              "body": "Looking at it again though, only the first stacktrace I included above mentions `sin(x) is only defined for finite x.`, while the second stacktrace (another run, with identical script and parameters) doesn't mention anything related to `sin` as far as I can see, but instead mentions `UNHANDLED TASK ERROR: IOError: read: connection reset by peer (ECONNRESET)`, isn't that a different problem?",
              "createdAt": "2024-12-03T09:20:50Z"
            },
            {
              "author": {
                "login": "MilesCranmer"
              },
              "body": "I _think_ that error is just because the DomainError occurred in a worker, causing the worker to exit prematurely, which causes the main node to also exit.",
              "createdAt": "2024-12-03T09:45:08Z"
            },
            {
              "author": {
                "login": "GoldenGoldy"
              },
              "body": "Right, ok let me run the various tests and report back once I have some results.",
              "createdAt": "2024-12-03T10:39:51Z"
            },
            {
              "author": {
                "login": "MilesCranmer"
              },
              "body": "Should be fixed by https://github.com/SymbolicML/DynamicExpressions.jl/pull/110",
              "createdAt": "2024-12-03T14:14:18Z"
            }
          ],
          "pageInfo": {
            "hasNextPage": false,
            "endCursor": "Y3Vyc29yOnYyOpHOleL-8Q=="
          }
        }
      }
    }
  }
}